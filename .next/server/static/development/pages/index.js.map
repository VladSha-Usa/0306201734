{"version":3,"file":"static\\development\\pages\\index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/feedback.js","webpack:///./components/feedbacksTabs.js","webpack:///./components/form.js","webpack:///./components/generalInfOfUser.js","webpack:///./components/privateInfOfUser.js","webpack:///./components/serviceType.js","webpack:///./components/servicesWireframe.js","webpack:///./pages/index.js","webpack:///external \"formik\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/head\"","webpack:///external \"react\"","webpack:///external \"react-tabs\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"yup\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const feedback = ({ feedback }) => {\n  return (\n    <>\n      <div className=\"feedback-wrapper\">\n        <div className=\"info-name-date\">\n          <span className=\"name\">{feedback.name}</span>\n          <span className=\"date\">{feedback.date}</span>\n        </div>\n        <div className=\"main-content-feedback\">{feedback.textOfFeedback}</div>\n      </div>\n      <style jsx>{`\n        .feedback-wrapper {\n          margin-bottom: 30px;\n        }\n        .info-name-date {\n          display: flex;\n          align-items: flex-end;\n          margin-bottom: 20px;\n        }\n        .name {\n          margin-right: 10px;\n          font-size: 20px;\n          font-weight: 600;\n        }\n        .date {\n          font-size: 16px;\n          color: #808080;\n        }\n        .main-content-feedback {\n          font-size: 20px;\n          line-height: 26px;\n          box-shadow: 0px 4px 10px rgba(128, 128, 128, 0.1);\n          padding: 15px 15px 15px 20px;\n          background: #f2fbff;\n          border: 1px solid #c4cbcf;\n          position: relative;\n        }\n        .main-content-feedback:before {\n          content: \" \";\n          position: absolute;\n          width: 0;\n          height: 0;\n          border-style: solid;\n          border-width: 20px 0 0 18px;\n          border-color: transparent transparent transparent #c4cbcf;\n          top: -15px;\n          left: 30px;\n          z-index: -1;\n        }\n        .main-content-feedback:after {\n          content: \" \";\n          position: absolute;\n          width: 0;\n          height: 0;\n          border-style: solid;\n          border-width: 14px 0 0 14px;\n          border-color: transparent transparent transparent #f2fbff;\n          top: -12px;\n          left: 31px;\n        }\n        @media only screen and (max-width: 660px) {\n          .name {\n            font-size: 18px;\n          }\n          .date {\n            font-size: 14px;\n          }\n          .main-content-feedback {\n            font-size: 18px;\n            line-height: 24px;\n          }\n        }\n        @media only screen and (max-width: 600px) {\n          .name {\n            font-size: 16px;\n          }\n          .date {\n            font-size: 12px;\n          }\n          .main-content-feedback {\n            font-size: 16px;\n            line-height: 22px;\n          }\n        }\n        @media only screen and (max-width: 540px) {\n          .name {\n            font-size: 14px;\n          }\n          .date {\n            font-size: 10px;\n          }\n          .main-content-feedback {\n            font-size: 14px;\n            line-height: 19px;\n            padding: 13px 15px 15px 20px;\n          }\n          .info-name-date {\n            margin-bottom: 11px;\n          }\n          .main-content-feedback:before {\n            border-width: 16px 0 0 14px;\n            top: -11px;\n            left: 23px;\n          }\n          .main-content-feedback:after {\n            border-width: 10px 0 0 10px;\n            top: -8px;\n            left: 24px;\n          }\n          .feedback-wrapper {\n            margin-bottom: 16px;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\nexport default feedback;\n","import { Tab, Tabs, TabList, TabPanel, resetIdCounter } from \"react-tabs\";\nimport Feedback from \"./feedback\";\nconst privateInfOfUser = ({ feedbacksContent }) => {\n  resetIdCounter();\n  return (\n    <>\n      <Tabs>\n        <div className=\"status-wrapper\">\n          <TabList>\n            <Tab>Последние отзывы</Tab>\n            <Tab>Все отзывы</Tab>\n          </TabList>\n          <div className=\"likes-feedbacks-amount\">\n            <div className=\"likes-info\">\n              <img src=\"/icons/like.svg\" />\n              <span className=\"likes-amount\">131</span>\n            </div>\n            <div className=\"feedbacks-info\">\n              <img src=\"/icons/comment.svg\" />\n              <span className=\"feedbacks-amount\">\n                {feedbacksContent.length}\n              </span>\n            </div>\n          </div>\n        </div>\n        <TabPanel>\n          {feedbacksContent\n            .filter(\n              (feedback) =>\n                (Date.UTC(\n                  new Date().getFullYear(),\n                  new Date().getMonth() + 1,\n                  new Date().getDate(),\n                  0,\n                  0,\n                  0\n                ) -\n                  feedback.timeInMilliseconds) /\n                  (60 * 60000) /\n                  24 <=\n                2\n            )\n            .map((feedback, index) => (\n              <Feedback feedback={feedback} key={index} />\n            ))}\n        </TabPanel>\n        <TabPanel>\n          {feedbacksContent.map((feedback, index) => (\n            <Feedback feedback={feedback} key={index} />\n          ))}\n        </TabPanel>\n      </Tabs>\n      <style jsx>{`\n        .status-wrapper {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .likes-feedbacks-amount {\n          display: flex;\n          font-size: 20px;\n          align-items: flex-end;\n        }\n        .likes-feedbacks-amount img {\n          width: 24px;\n          height: 22px;\n        }\n        .likes-info,\n        .feedbacks-info {\n          display: flex;\n          align-items: center;\n        }\n        .likes-amount,\n        .feedbacks-amount {\n          margin-left: 4px;\n        }\n        .feedbacks-info {\n          margin-left: 18px;\n        }\n        @media only screen and (max-width: 660px) {\n          .likes-feedbacks-amount {\n            font-size: 18px;\n          }\n          .likes-feedbacks-amount img {\n            width: 21px;\n            height: 19px;\n          }\n        }\n        @media only screen and (max-width: 600px) {\n          .likes-feedbacks-amount {\n            font-size: 16px;\n          }\n          .likes-feedbacks-amount img {\n            width: 19px;\n            height: 17px;\n          }\n        }\n        @media only screen and (max-width: 540px) {\n          .likes-feedbacks-amount {\n            font-size: 12px;\n          }\n          .likes-feedbacks-amount img {\n            width: 14px;\n            height: 13px;\n          }\n          .status-wrapper {\n            margin-bottom: 10px;\n          }\n        }\n        @media only screen and (max-width: 490px) {\n          .likes-feedbacks-amount {\n            font-size: 11px;\n          }\n          .likes-feedbacks-amount img {\n            width: 11px;\n            height: 12px;\n          }\n          .feedbacks-info {\n            margin-left: 8px;\n          }\n          .likes-amount,\n          .feedbacks-amount {\n            margin-left: 2px;\n          }\n        }\n        @media only screen and (max-width: 430px) {\n          .feedbacks-info {\n            margin-left: 5px;\n          }\n        }\n      `}</style>\n      <style jsx global>{`\n        .react-tabs__tab-list {\n          list-style: none;\n          margin-block-start: 0;\n          margin-block-end: 0;\n          padding-inline-start: 0;\n          display: flex;\n        }\n        .react-tabs__tab {\n          display: flex;\n          font-size: 20px;\n          align-items: flex-end;\n          color: #005da1;\n          text-decoration-line: underline;\n          cursor: pointer;\n          margin-right: 15px;\n          outline: none;\n        }\n        .react-tabs__tab--selected {\n          font-size: 22px;\n          font-weight: 600;\n          color: #333333;\n          text-decoration: none;\n          cursor: default;\n        }\n        @media only screen and (max-width: 660px) {\n          .react-tabs__tab--selected {\n            font-size: 20px !important;\n          }\n          .react-tabs__tab {\n            font-size: 18px;\n          }\n        }\n        @media only screen and (max-width: 600px) {\n          .react-tabs__tab--selected {\n            font-size: 18px !important;\n          }\n          .react-tabs__tab {\n            font-size: 16px;\n            margin-right: 10px;\n          }\n        }\n        @media only screen and (max-width: 540px) {\n          .react-tabs__tab--selected {\n            font-size: 16px !important;\n          }\n          .react-tabs__tab {\n            font-size: 14px;\n          }\n        }\n        @media only screen and (max-width: 490px) {\n          .react-tabs__tab--selected {\n            font-size: 15px !important;\n          }\n          .react-tabs__tab {\n            font-size: 13px;\n            margin-right: 7px;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\nexport default privateInfOfUser;\n","import { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useEffect, useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Очень короткое имя\")\n    .max(50, \"Очень длинное имя\")\n    .required(\"Поле не может быть пустым\"),\n  textOfFeedback: Yup.string()\n    .min(0, \"Очень короткий отзыв\")\n    .max(300, \"Очень длинный отзыв\")\n    .required(\"Поле не может быть пустым\"),\n});\nconst form = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [form, setForm] = useState();\n  useEffect(() => {\n    addEventListener(\"keydown\", (e) => {\n      e.keyCode === 13 && e.ctrlKey\n        ? document.querySelector(\".form-btn\").click()\n        : null;\n    });\n    if (isSubmitting) {\n      sendFeedback();\n      setIsSubmitting(!isSubmitting);\n      setTimeout(() => location.reload(true), 200);\n    }\n  });\n  const sendFeedback = async () => {\n    try {\n      const res = await fetch(\"http://localhost:3000/api/notes\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          ...form,\n          date: new Date()\n            .toLocaleString(\"ru\", {\n              day: \"numeric\",\n              month: \"long\",\n              year: \"numeric\",\n            })\n            .replace(/\\s*г\\./, \"\"),\n          timeInMilliseconds: Date.UTC(\n            new Date().getFullYear(),\n            new Date().getMonth() + 1,\n            new Date().getDate(),\n            0,\n            0,\n            0\n          ),\n        }),\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: \"\",\n          textOfFeedback: \"\",\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={async (values) => {\n          await new Promise((resolve) => setTimeout(resolve, 500));\n          setForm(values);\n          setIsSubmitting(!isSubmitting);\n        }}\n      >\n        {({ errors, touched, values }) => (\n          <Form className=\"form\">\n            <div className=\"row\">\n              <Field\n                name=\"name\"\n                className=\"form-input-name\"\n                placeholder=\"Имя\"\n                type=\"text\"\n              />\n              {errors.name && touched.name ? (\n                <div className=\"error\">{errors.name}</div>\n              ) : null}\n            </div>\n            <div className=\"row\">\n              <Field\n                name=\"textOfFeedback\"\n                as=\"textarea\"\n                className=\"form-textarea\"\n                placeholder=\"Отзыв\"\n                type=\"text\"\n                value={values.textOfFeedback || \"\"}\n              />\n              {errors.textOfFeedback && touched.textOfFeedback ? (\n                <div className=\"error\">{errors.textOfFeedback}</div>\n              ) : null}\n            </div>\n            <button type=\"submit\" className=\"form-btn\">\n              Написать консультанту\n            </button>\n          </Form>\n        )}\n      </Formik>\n      <style jsx>\n        {`\n          .form-btn {\n            width: 62%;\n            min-height: 43px;\n            background: #fdd639;\n            border-radius: 23px;\n            border: none;\n            outline: none;\n            font-weight: 600;\n            font-size: 22px;\n            line-height: 21px;\n            cursor: pointer;\n            padding: 15px 0px;\n            align-self: center;\n          }\n          .error {\n            font-family: \"Open Sans\", sans-serif;\n            color: red;\n          }\n          .row {\n            margin-bottom: 23px;\n            width: 100%;\n            padding: 0;\n          }\n          @media only screen and (max-width: 660px) {\n            .form-btn {\n              font-size: 20px;\n              line-height: 18px;\n            }\n          }\n          @media only screen and (max-width: 600px) {\n            .form-btn {\n              font-size: 18px;\n              line-height: 17px;\n            }\n          }\n          @media only screen and (max-width: 540px) {\n            .row {\n              margin-bottom: 18px;\n            }\n            .form-btn {\n              font-size: 16px;\n              line-height: 17px;\n              padding: 15px 15px;\n            }\n          }\n        `}\n      </style>\n      <style jsx global>\n        {`\n          .form {\n            display: flex;\n            flex-direction: column;\n            padding-top: 28px;\n            padding-bottom: 34px;\n          }\n          .form-input-name,\n          .form-textarea {\n            background: #ffffff;\n            border: 1px solid #000000;\n            border-radius: 1px;\n            outline: none;\n            width: 100%;\n            padding: 0 20px;\n            box-sizing: border-box;\n            font-size: 20px;\n          }\n          .form-input-name {\n            height: 50px;\n          }\n          .form-textarea {\n            height: 100px;\n            resize: none;\n            padding: 10px 20px;\n            box-sizing: border-box;\n          }\n          .row textarea {\n            font-size: 20px;\n            font-family: \"Open Sans\", sans-serif;\n          }\n          ::-webkit-input-placeholder {\n            font-size: 20px;\n            color: #808080;\n            font-family: \"Open Sans\", sans-serif;\n          }\n          ::-moz-placeholder {\n            font-size: 20px;\n            color: #808080;\n            font-family: \"Open Sans\", sans-serif;\n          }\n          :-moz-placeholder {\n            font-size: 20px;\n            color: #808080;\n            font-family: \"Open Sans\", sans-serif;\n          }\n          :-ms-input-placeholder {\n            font-size: 20px;\n            color: #808080;\n            font-family: \"Open Sans\", sans-serif;\n          }\n          @media only screen and (max-width: 660px) {\n            .row textarea {\n              font-size: 18px;\n            }\n            ::-webkit-input-placeholder {\n              font-size: 18px;\n            }\n            ::-moz-placeholder {\n              font-size: 18px;\n            }\n            :-moz-placeholder {\n              font-size: 18px;\n            }\n            :-ms-input-placeholder {\n              font-size: 18px;\n            }\n            .form-input-name,\n            .form-textarea {\n              font-size: 18px;\n            }\n          }\n          @media only screen and (max-width: 600px) {\n            .row textarea {\n              font-size: 16px;\n            }\n            ::-webkit-input-placeholder {\n              font-size: 16px;\n            }\n            ::-moz-placeholder {\n              font-size: 16px;\n            }\n            :-moz-placeholder {\n              font-size: 16px;\n            }\n            :-ms-input-placeholder {\n              font-size: 16px;\n            }\n            .form-input-name,\n            .form-textarea {\n              font-size: 16px;\n            }\n          }\n          @media only screen and (max-width: 540px) {\n            .form-input-name {\n              height: 30px;\n            }\n            .form-textarea {\n              height: 80px;\n              padding: 10px 20px;\n              box-sizing: border-box;\n            }\n            .row textarea {\n              font-size: 14px;\n            }\n            ::-webkit-input-placeholder {\n              font-size: 14px;\n            }\n            ::-moz-placeholder {\n              font-size: 14px;\n            }\n            :-moz-placeholder {\n              font-size: 14px;\n            }\n            :-ms-input-placeholder {\n              font-size: 14px;\n            }\n            .form-input-name,\n            .form-textarea {\n              font-size: 14px;\n            }\n          }\n        `}\n      </style>\n    </>\n  );\n};\nexport default form;\n","import PrivateInfOfPerson from \"./privateInfOfUser\";\nimport ServicesWireframe from \"./servicesWireframe\";\nconst generalInfOfUser = () => {\n  return (\n    <>\n      <div className=\"general-inf-wrapper\">\n        <PrivateInfOfPerson />\n        <ServicesWireframe />\n      </div>\n    </>\n  );\n};\nexport default generalInfOfUser;\n","const privateInfOfUser = () => {\n  return (\n    <>\n      <div className=\"info-user-wrapper\">\n        <img className=\"user-img\" src=\"/img/veronika-img.jpg\" />\n        <div className=\"info-main\">\n          <span className=\"name\">Вероника Ростова</span>\n          <span className=\"status\">Менеджер по продажам</span>\n          <div className=\"slogan\">\n            Подберу для вас самые лучшие предложения. Мои услуги абсолютно\n            бесплатны\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .info-user-wrapper {\n          line-height: 36px;\n          display: flex;\n        }\n        .info-main {\n          display: flex;\n          flex-direction: column;\n          width: 70%;\n          margin-left: 10px;\n        }\n        .user-img {\n          border-radius: 50%;\n          z-index: 100;\n          height: 30%;\n          width: 30%;\n        }\n        .name {\n          font-weight: 600;\n          font-size: 22px;\n          padding-top: 10px;\n        }\n        .status {\n          font-size: 18px;\n          color: #808080;\n          margin-bottom: 10px;\n        }\n        .slogan {\n          font-size: 20px;\n          width: auto;\n          min-height: 54px;\n          padding: 5px 5px 5px 45px;\n          background: #fffbc8;\n          border: 1px solid #dadada;\n          box-sizing: border-box;\n          border-radius: 5px;\n          margin-left: -50px;\n        }\n        @media only screen and (max-width: 660px) {\n          .info-user-wrapper {\n            line-height: 28px;\n          }\n          .name {\n            font-size: 20px;\n          }\n          .status {\n            font-size: 16px;\n          }\n          .slogan {\n            font-size: 18px;\n            width: 111.5%;\n          }\n        }\n        @media only screen and (max-width: 600px) {\n          .info-user-wrapper {\n            line-height: 26px;\n          }\n          .name {\n            font-size: 18px;\n          }\n          .status {\n            font-size: 14px;\n          }\n          .slogan {\n            font-size: 16px;\n            width: 113%;\n          }\n        }\n        @media only screen and (max-width: 540px) {\n          .info-user-wrapper {\n            line-height: 20px;\n          }\n          .name {\n            font-size: 16px;\n            padding-top: 6px;\n            margin-bottom: 3px;\n          }\n          .status {\n            font-size: 12px;\n            margin-bottom: 5px;\n          }\n          .slogan {\n            font-size: 14px;\n            width: 115%;\n            margin-left: -45px;\n          }\n          .info-main {\n            width: 73%;\n            margin-left: 8px;\n          }\n          .user-img {\n            height: 27%;\n            width: 27%;\n          }\n        }\n        @media only screen and (max-width: 490px) {\n          .info-user-wrapper {\n            line-height: 20px;\n          }\n          .status {\n            font-size: 11px;\n          }\n          .slogan {\n            font-size: 13px;\n          }\n        }\n        @media only screen and (max-width: 430px) {\n          .info-user-wrapper {\n            line-height: 17px;\n          }\n          .slogan {\n            width: 116%;\n          }\n        }\n        @media only screen and (max-width: 390px) {\n          .slogan {\n            width: 118%;\n          }\n        }\n        @media only screen and (max-width: 360px) {\n          .slogan {\n            width: 119.5%;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\nexport default privateInfOfUser;\n","import { useEffect, useState } from \"react\";\nconst serviceType = ({ serviceData, generalCount, widthOfServices }) => {\n  const [widthService, setWidthService] = useState();\n\n  useEffect(() => {\n    const widthOfLineStatistics =\n      (((widthOfServices / 100) * 85) / generalCount) * serviceData.count;\n    setWidthService(widthOfLineStatistics);\n  }, [widthOfServices]);\n\n  return (\n    <>\n      <div className=\"service-type\">\n        <span className=\"type\">{serviceData.type}</span>\n        <span className=\"count\">{serviceData.count}</span>\n      </div>\n      <style jsx>{`\n        .service-type {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 5px;\n          font-size: 19px;\n          height: 24px;\n        }\n        .type {\n          background: ${serviceData.background};\n          white-space: nowrap;\n          width: ${widthService}px;\n          border-bottom-right-radius: 5px;\n          border-top-right-radius: 5px;\n          display: flex;\n          align-items: center;\n        }\n        .count {\n          font-weight: 600;\n        }\n        @media only screen and (max-width: 660px) {\n          .service-type {\n            font-size: 17px;\n          }\n        }\n        @media only screen and (max-width: 600px) {\n          .service-type {\n            font-size: 15px;\n          }\n        }\n        @media only screen and (max-width: 540px) {\n          .service-type {\n            font-size: 13px;\n            margin-bottom: 2px;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\nexport default serviceType;\n","import ServiceType from \"./serviceType\";\nimport { useEffect, useState } from \"react\";\nconst servicesWireframe = () => {\n  const services = [\n    { type: \"Ручное бронирование\", count: 11, background: \"#B1E19B\" },\n    { type: \"Пакетные туры\", count: 3, background: \"#ACE2F8\" },\n    { type: \"Отели\", count: 1, background: \"#ACE2F8\" },\n  ];\n  const generalCount = services\n    .map((type) => type.count)\n    .reduce((acc, sum) => acc + sum, 0);\n\n  const [widthServices, setWidthServices] = useState();\n  useEffect(() => {\n    setWidthServices(document.querySelector(\".services\").offsetWidth);\n    addEventListener(\"resize\", () => {\n      setWidthServices(document.querySelector(\".services\").offsetWidth);\n    });\n  });\n  return (\n    <>\n      <div className=\"services-wrapper\">\n        <span className=\"intro-title\">Услуг</span>\n        <div className=\"services\">\n          {services.map((type, index) => (\n            <div key={index}>\n              <ServiceType\n                serviceData={type}\n                generalCount={generalCount}\n                widthOfServices={widthServices}\n              />\n            </div>\n          ))}\n        </div>\n        <div className=\"general-count\">\n          <span className=\"count-intro-title\">Всего</span>\n          <span className=\"count\">{generalCount}</span>\n        </div>\n      </div>\n      <style jsx>{`\n        .services-wrapper {\n          width: 70.4%;\n          margin-left: auto;\n        }\n        .services {\n          border-left: 1px solid #dadada;\n          padding-right: 41px;\n        }\n        .intro-title {\n          display: flex;\n          justify-content: flex-end;\n          border-bottom: 1px solid #dadada;\n          font-size: 19px;\n          padding-right: 34px;\n          padding-bottom: 7px;\n          margin-bottom: 16px;\n        }\n        .general-count {\n          display: flex;\n          justify-content: space-between;\n          border-top: 1px solid #dadada;\n          font-size: 22px;\n          font-weight: 600;\n          padding-right: 41px;\n          padding-top: 7px;\n          margin-top: 16px;\n        }\n        @media only screen and (max-width: 660px) {\n          .intro-title {\n            font-size: 17px;\n          }\n          .general-count {\n            font-size: 20px;\n          }\n        }\n        @media only screen and (max-width: 600px) {\n          .intro-title {\n            font-size: 15px;\n          }\n          .general-count {\n            font-size: 18px;\n          }\n        }\n        @media only screen and (max-width: 540px) {\n          .intro-title {\n            font-size: 13px;\n          }\n          .general-count {\n            font-size: 16px;\n          }\n        }\n      `}</style>\n    </>\n  );\n};\nexport default servicesWireframe;\n","import React from \"react\";\nimport Head from \"next/head\";\nimport GeneralInfOfUser from \"../components/generalInfOfUser\";\nimport FeedbacksTabs from \"../components/feedbacksTabs\";\nimport Form from \"../components/form\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Home = ({ notes }) => {\n  return (\n    <>\n      <Head>\n        <title>Page Of Manager Veronika</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <div className=\"main-container\">\n        <div className=\"section-general-inf-user\">\n          <GeneralInfOfUser />\n        </div>\n        <div className=\"section-feedbacks\">\n          <FeedbacksTabs feedbacksContent={notes} />\n        </div>\n      </div>\n      <div className=\"form-container\">\n        <div className=\"page-content\">\n          <Form />\n        </div>\n      </div>\n      <style jsx>{`\n        .main-container {\n          font-family: \"Open Sans\", sans-serif;\n          color: #333333;\n          max-width: 720px;\n          margin: auto;\n          box-sizing: border-box;\n          padding: 14px 20px;\n        }\n        .section-general-inf-user {\n          margin-bottom: 27px;\n        }\n        .form-container {\n          background: #f2f2f2;\n        }\n        .page-content {\n          max-width: 720px;\n          margin: auto;\n          padding: 0px 20px;\n          box-sizing: border-box;\n        }\n        @media only screen and (max-width: 540px) {\n          .section-general-inf-user {\n            margin-bottom: 20px;\n          }\n        }\n      `}</style>\n      <style jsx global>\n        {`\n          body {\n            margin: 0;\n          }\n        `}\n      </style>\n    </>\n  );\n};\nHome.getInitialProps = async () => {\n  const res = await fetch(\"http://localhost:3000/api/notes\");\n  const { data } = await res.json();\n  return { notes: data };\n};\n\nexport default Home;\n","module.exports = require(\"formik\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");","module.exports = require(\"react-tabs\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"yup\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAkHA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACrkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4LA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClMA;AACA;AACA;AACA;AAEA;AACA;AAIA;AALA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AAEA;AACA;AACA;AAHA;AAMA;AATA;AANA;AAyvCA;AAAA;A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","sourceRoot":""}